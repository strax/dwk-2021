name: Release project
on:
  [push]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  DOCKER_BUILDKIT: 1
jobs:
  build-frontend-image:
    name: "frontend: build and push"
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: dwk-project-frontend
    defaults:
      run:
        working-directory: project/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: build-push
        name: Build image and push to registry
        run: |
          IMAGE_TAG="${GITHUB_REF#refs/heads/}"
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          docker build \
            --tag "$IMAGE_ID:$IMAGE_TAG" \
            --cache-from "$IMAGE_ID" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --label org.opencontainers.image.revision="$GITHUB_SHA" \
            .
          docker push "$IMAGE_ID:$IMAGE_TAG"
          DIGEST=$(skopeo inspect "docker://$IMAGE_ID:$IMAGE_TAG" -f "{{.Digest}}")
          echo "digest: $DIGEST"
  build-api-image:
    name: "api: build and push"
    outputs:
      image: ${{ steps.build-push.outputs.image }}
      digest: ${{ steps.build-push.outputs.digest }}
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: dwk-project-api
    defaults:
      run:
        working-directory: project/api
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: build-push
        name: Build image and push to registry
        run: |
          IMAGE_TAG="${GITHUB_REF#refs/heads/}"
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          docker build \
            --tag "$IMAGE_ID:$IMAGE_TAG" \
            --cache-from "$IMAGE_ID" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --label org.opencontainers.image.revision="$GITHUB_SHA" \
            .
          docker push "$IMAGE_ID:$IMAGE_TAG"
          DIGEST=$(skopeo inspect "docker://$IMAGE_ID:$IMAGE_TAG" -f "{{.Digest}}")
          echo "digest: $DIGEST"
